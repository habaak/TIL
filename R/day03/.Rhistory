substr(Fruits$Date)
substr(Fruits$Date)
Fruits$Date
substr(Fruits$Date,6,2)
strsplit(Fruits$Date, split="-")
strsplit(Fruits$Date, split='-')
class(Fruits$Date)
as.Date(Fruits$Date,format(mm))
as.Date(Fruits$Date,format=mm);
as.Date(Fruits$Date,format=m);
as.Date(Fruits$Date,format=yyyymmdd);
as.Date(Fruits$Date,format=yymmdd);
as.Date(Fruits$Date,format=%m);
as.Date(Fruits$Date,format="%m");
as.Date(Fruits$Date,format='%m');
as.Date(Fruits$Date,format='%m / %d / %Y');
substr(Fruits$Date,6)
substr(Fruits$Date,6,2)
substr(as.character(Fruits$Date),6,2)
substr(as.character(Fruits$Date),6,2)
as.character(Fruits$Date)
date <- as.character(Fruits$Date)
date
(date,6,2)
substr(date,6,2)
substr(date,6,5)
substr(date,3,5)
strsplit(date,"-")
class(strsplit(date,"-"))
date <- strsplit(date,"-")
data
date
date[2]
date(2)
date
date[,2]
date[2,]
date
date[][2]
date[2][]
date
date[2]
date[2,2]
data.frame(data)
data.frame(date)
date <- strsplit(date,"-")
date <- strsplit(date,"-")
date
substr(Date,1,4)
date <- Fruits$Date
substr(date,1,4)
year <- substr(date,1,4)
substr(date,6,7)
substr(date,6,7)
month <- substr(date,6,7)
aggregate(Sales~year+month,sum)
aggregate(Sales~year+month,sum)
cbind(Fruits,year)
f2 <-cbind(Fruits,year)
f2 <-cbind(Fruits,month)
aggregate(Sales~f2.year+f2.month,sum)
aggregate(Sales~f2$year+f2$month,sum)
f2$year
f2
f2 <-cbind(Fruits,year)
f2 <-cbind(Fruits,month)
f2
aggregate(Sales~f2$Year+f2$month,sum)
aggregate(Sales~year+month,f2,sum)
aggregate(profit~year+,month,f2,sum)
aggregate(profit~year+month,f2,sum)
aggregate(Profit~year+month,f2,sum)
s_sum <- aggregate(Sales~year+month,f2,sum)
p_sum <- aggregate(Profit~year+month,f2,sum)
s_sum[3]-p_sum[3]
(s_sum[3]-p_sum[3])*1
(s_sum[3]-p_sum[3])*0.1
(s_sum[3]-p_sum[3])*0.1
fee<-(s_sum[3]-p_sum[3])*0.1
fee<-(s_sum[3]-p_sum[3])*0.1
fee
colnames(fee,'fee')
colnames(fee)='fee'
fee# 문제 3. 년별 월 별 세금을 계산한다.(세금은 총 판매액(Sales-Profit)*0.1)
s_sum <- aggregate(Sales~year+month,f2,sum)
p_sum <- aggregate(Profit~year+month,f2,sum)
# 문제 3. 년별 월 별 세금을 계산한다.(세금은 총 판매액(Sales-Profit)*0.1)
aggregate(Sales~)
s_sum <- aggregate(Sales~year+month,f2,sum)
s_sum
p_sum
P3 <- p_sum[,C(1:2)]
p_sum[,C(1:2)]
p_sum[,C(1,2)]
p_sum[,1]
p_sum[,C(1,2)]
p_sum[,c(1,2)]
P3 <- p_sum[,c(1,2)]
cbind(p3,fee)
cbind(P3,fee)
p3_1 <- aggregate((Sales-Profit)*0.1~Year+month,f2,sum)
colnames(df3) <- c('YEAR','MONTH', 'FEE')
colnames(p3_1) <- c('YEAR','MONTH', 'FEE')
p3_1
library('ggplot2')
head(mpg)
summary(mpg)
view(mpq)
view(mpg)
View(mpg)
dim(mpg)
str(mpg)
summary(mpg) #요약 통계량
tf <- data.frame(x=c(1:5),y=c(6:10))
tf
colnames(tf) <- c('','')
colnames(tf) <- c('col1','col2')
tf
tf <- data.frame(x=c(1:5),y=c(6:10))
tf
tfc<-tf
colnames(tfc) <- c('col1','col2')
tfc
tf
install.packages(dp1yr)
install.packages(dplyr)
install.packages('dplyr)
install.packages('dplyr')
install.packages('dplyr')
library(dplyr)
tfc
tfc <- rename(tf, '1-5'=col2)
tfc <- rename(tfc, '1-5'=col2)
ftc
tfc
tfc <- rename(tfc, '6-10'=col2)
tfc
tfc <- rename(tfc, '6-10'=col2)
tfc <- rename(tfc, '6-10'=1-5)
tfc
tfc <- rename(tfc, '6-10'=1-5)
rename(mpg,'city'=cty)
rename(mpg,'highway'=hwy)
mpg2<-rename(mpg,'city'=cty)
mpg2<-rename(mpg,'highway'=hwy)
mpg2
mpg2<-rename(mpg2,'highway'=hwy)
mpg2
mpg2<-rename(mpg2,'city'=cty)
mpg2<-rename(mpg2,'highway'=hwy)
mpg2
mpg2<-rename(mpg,'city'=cty)
mpg2
mpg2<-rename(mpg2,'highway'=hwy)
mpg2
library('ggplot2')
mpg
aggregate(cty~manufacturer,mpg2,sum)
aggregate(cty~manufacturer,mpg2,sum)
aggregate(ctty~manufacturer,mpg2,sum)
aggregate(city~manufacturer,mpg2,sum)
aggregate(city~manufacturer,mpg2,mean)
mpg2$drvavg <- aggregate((city+highway)/2~manufacturer,mpg2,mean)
aggregate((mpg2$city+mpg2$highway)/2~manufacturer,mpg2,mean)
mpg2$drvavg <- (mpg2$city+mpg2$highway)/2
mpg2$drvavg
hist(mpg2)
mpg2$total <- (mpg2$city+mpg2$highway)/2
hist(mpg2$total)
View(mpg2)
ifelse(mp2$total>=20, 'pass', 'fail')
mpg$test <-ifelse(mpg2$total>=20, 'pass', 'fail')
mpg$test
hist(mpg2$test)
hist(mpg2$test)
mpg2$test <-ifelse(mpg2$total>=20, 'pass', 'fail')
hist(mpg2$test)
mpg2$test <-ifelse(mpg2$total>=20, 'pass', 'fail')
mpg2$test <-ifelse(mpg2$total>=20, 'PASS', 'FAIL')
table(mpg$test)
hist(table(mpg$test))
qplot(table(mpg$test))
qplot(mpg$test)
class(table(mpg$test))
as.vector(table(mpg$test))
library('midwest')
library('midwest')
install.packages('midwest')
install.packages('ggplot2')
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
library(midwest)
View(mpg)
midwest
library(midwest)
midwest
library(ggplot2)
total <- midwest$population
total <- midwest$poptotal
asian <- midwest$popasian
rateasian <- asian/total
hist(rateasian)
mean(asian)
rateasian
mean(rateasian)
ifelse(mean(rateasian)>mean(asian),"large","small")
ifelse(mean(rateasian)>rateasian,"large","small")
avgasian<-ifelse(mean(rateasian)>rateasian,"large","small")
table(avgasian)
qplot(table(avgasian))
qplot(avgasian)
avgasian<-ifelse(mean(rateasian)<rateasian,"large","small")
table(avgasian)
qplot(avgasian)
install.packages('sqldf')
library(sqldf)
library(ggplot2)
sqldf('select * frmo mpg')
sqldf('select * from mpg')
sqldf('select * from mpg')
mympg <- sqldf('select *, (cty+hwy)/2 as total from mpg')
mympg
true <- sqldf('select total from mpg where total=TRUE')
true <- sqldf(' select total from mpg where total>=20 ')
true <- sqldf(' select * from mpg where total>=20 ')
mpg
true <- sqldf(' select total from mpg ')
true <- sqldf(' select * from mpg ')
true
true <- sqldf(' select total from mympg where total>=20')
false <- sqldf(' select total from mympg where total<20')
qplot(ture,false)
mympg2 <- sqldf(' select *, case when total >= 20 then "pass" else "fail" end as test from mympg)
mympg2
mympg2 <- sqldf(' select *, case when total >= 20 then "pass" else "fail" end as test from mympg')
mympg2 <- sqldf(' select *, case when total >= 20 then "pass" else "fail" end as test from mympg')
mympg2
qplot(mympg2$test)
mympg2 <- sqldf(' select *, case when total >= 30 then "A" when total<30 and total >=20 then "B" else "c" end as test from mympg')
mympg2
qplot(mympg2$test)
mympg2 <- sqldf(' select *, case when total >= 30 then "A" when total<30 and total >=20 then "B" else "c" end as test from mympg')
mympg2
qplot(mympg2$test)
mympg2 <- sqldf(' select *, case when total >= 30 then "A" when total<30 and total >=20 then "B" else "c" end as grade from mympg')
mympg2
qplot(mympg2$grade)
library(dplyr)
exam <- read.csv('csv_exam.csv')
exam %>% filter(class==1)
exam %>% filter(class == 1)
exam %>% filter(class == 1)
exam <- read.csv('csv_exam.csv')
colnames(exam) <-c('id','class','math','english','science')
exam %>% filter(class == 1)
colnames(exam) <-c('id','class','math','english','science')
exam %>% filter(class == 1)
exam
colnames(exam) <-c('id','name','class','math','english','science')
exam %>% filter(class == 1)
exam[exam$class==1,]
exam[exam$class!=1,]
exam[exam$math >= 50 & exam$english >= 30,]
exam[exam$math >= 70 & exam$english >= 80,]
exam[exan$class %in% c(1:3)]
exam[exan$class %in% c(1:3),]
exam[exam$class %in% c(1:3),]
exam[exam$class %in% c(1:2),]
exam[exam$math %in% c(50:70,]
exam[exam$math %in% c(50:70),]
mpg$displ<=4
mpg$displ>=5
mpg[mpg$displ<=4,]
mpg[mpg$displ>=5,]
mpg[mpg$displ<=4,mpg$hwy]
mean(mpg[mpg$displ<=4,mpg$hwy])
mpg[,mpg$hwy]
mpg[mpg$displ<=4,]
mpg[mpg$displ>=5,]
mean(mpg[mpg$displ<=4,]$hwy)
class(mpg[mpg$displ<=4,]$hwy)
mpg[mpg$displ<=4,]$hwy
mean(mpg[mpg$displ<=4,]$hwy)
mean(mpg[mpg$displ>=5,]$hwy)
displ4<-mean(mpg[mpg$displ<=4,]$hwy)
displ5<-mean(mpg[mpg$displ>=5,]$hwy)
mean(mpg[mpg$manufacturer='audi',]$cty)
mean(mpg[mpg$manufacturer='audi',]$cty)
mean(mpg[mpg$manufacturer='audi',]$cty)
mean(mpg[mpg$manufacturer in 'audi',]$cty)
mean(mpg[mpg$manufacturer %in% 'audi',]$cty)
mean(mpg[mpg$manufacturer %in% 'toyota',]$cty)
mean(mpg[mpg$manufacturer %in% 'ford',]$hwy)
mean(mpg[mpg$manufacturer %in% 'honda',]$hwy)
chev<-mean(mpg[mpg$manufacturer %in% 'chevrolet',]$hwy)
ford<-mean(mpg[mpg$manufacturer %in% 'ford',]$hwy)
honda<-mean(mpg[mpg$manufacturer %in% 'honda',]$hwy)
mean(chev,ford,honda)
mean(mpg[mpg$manufacturer %in% 'honda','ford','chevolet']$hwy)
mean(mpg[mpg$manufacturer %in% 'honda' %in%'ford'%in%'chevolet']$hwy)
mean(mpg[mpg$manufacturer %in% c('honda', 'ford','chevolet')]$hwy)
aggregate(hwy~manufacturer,mpg,mean)
aggregate(hwy~manufacturer,mpg,mean)[audi,]
aggregate(hwy~manufacturer,mpg,mean)$audi
aggregate(hwy~manufacturer,mpg,mean)
qplot(aggregate(hwy~manufacturer,mpg,mean))
hist(aggregate(hwy~manufacturer,mpg,mean))
aggregate(hwy~manufacturer,mpg,mean) %in% audi
aggregate(hwy~manufacturer,mpg,mean) %in% 'audi'
aggregate(hwy~manufacturer,mpg,mean)%in%'audi'
aggregate(hwy~manufacturer,mpg,mean)
aggregate(hwy~manufacturer,mpg,mean)$manufacturer %in% audi
aggregate(hwy~manufacturer,mpg,mean)
mean(mpg[mpg$manufacturer %in% c('honda', 'ford','chevolet')]$hwy)
mpg[mpg$manufacturer %in% c('honda', 'ford','chevolet')]
mpg$manufacturer %in% c('honda', 'ford','chevolet')
temp <- aggregate(hwy~displ <= 4, mpg,mean)
temp
qplot(temp$hwy,x=c('5<=','4>='))
mpg
mpg2<-mpg[,mpg$model]
mpg2 <- mpg[,c('model','year')]
mpg2
exam
exam <- exam[,-2]
exam
exam[exam$class==1,'english']
exam[exam$class==2,'english']
exam[exam$class==2,c('english','math')]
exam[order(exam$math),]
exam[order(exam$math, decreasing = T ),]
exam[order(c(exam$math,exam$english), decreasing = T ),]
exam[order(  c(exam$math,exam$english), decreasing = T ),]
exam[order( exam$math,exam$english, decreasing = T ),]
exam2 <- exam%>%arrange(class,math)
exam2
exam[order( exam$class,exam$math, decreasing = T ),]
exam3 <- exam %>% arrange(desc(math))
exam3
head(exam3)
head(exam3, 5)
#각 반 별 3과목 평균이 높은사람 순으로 정렬하시오
score <- exam[,c(3:5)]
score
mean(score)
rowMeans(score)
means
means<-rowMeans(score)
cbind(score)<-means
cbind(score) =means
cbind(means, score)
cbind(exam, means)
exam4[order(exam4$class, exam4$means, decreasing = T),]
exam4 <- cbind(exam, means)
exam4[order(exam4$class, exam4$means, decreasing = T),]
mpg2
mpg3
mean(mpg[,hwy],mpg[,sty])
mean(mpg[,hwy],mpg[,sty])
mpg[,hwy]
mpg2<-mpg
mean(mpg2[,mpg2$hwy],mpg2[,mpg2$sty])
mpg2[,mpg2$hwy]
mpg2[,hwy]
mpg2
mpg2[,mpg2$hwy]
mean(mpg2$hwy,mpg2$sty)
rowmean(mpg2$hwy,mpg2$sty)
mpg2<-mpg[,c(hwy,cty)]
mpg2<-mpg[,c('hwy','cty')]
rowmean()
rowmean(mpg2)
mpg2<-mpg[,c('hwy','cty')]
mpg2
rowmean(mpg2)
rowmean(mpg2$hwy,mpg2$cty)
rowMeans(mpg2$hwy,mpg2$cty)
rowMeans(mpg2)
cbind(mpg2,rowMeans(mpg2))
mpg2<-cbind(mpg2,rowMeans(mpg2))
mpg2<-cbind(mpg2,rowMeans(mpg2))
mutate(avg = cty+hwy) %>% arrange(avg)
mpg2 %>% mutate(avg = cty+hwy) %>% arrange(avg)
mpg2 %>% mutate(avg = cty+hwy) %>% arrange(avg)
mpg2 %>% mutate(avg = cty+hwy) %>% arrange(avg)
mpg2 %>% mutate(avg = cty+hwy)
mpg2 %>% mutate(avg = mpg2$cty+mpg2$hwy) %>% arrange(avg)
mpg2 %>% mutate(avg = cty+hwy)
mutate(avg = cty+hwy)
mpg2
mpg2<-mpg
mpg2 %>% mutate(total = cty+hwy)
mpg2<-mpg
mpg2 %>% mutate(total = cty+hwy)
mpg2 %>% mutate(total = cty+hwy)
mpg2 %>% mutate(total = cty+hwy) %>% head
mpg2 %>% mutate(total_avg = total/2)
mpg2<-mpg2 %>% mutate(total = cty+hwy) %>% head
mpg2<-mpg2 %>% mutate(total_avg = total/2)
arrange(mpg2$total_avg,3)
arrange(mpg2$total_avg,3)
mpg2<-mpg2 %>% mutate(totalavg = total/2)
arrange(mpg2$totalavg,3)
arrange(mpg2$totalavg,3)
head(arrange(mpg2$totalavg),3)
mpg2 %>% arrange(totalavg) %>% head(3)
mpg2 %>% arrange(totalavg) %>% head(3)
mpg2 %>% arrange(desc(totalavg) %>% head(3)
mpg2 %>% arrange(desc(totalavg)) %>% head(3)
mpg2 %>% arrange(desc(totalavg)) %>% head(3)
mpg2 %>% head(arrange(desc(totalavg)),3)
mpg2 %>% arrange(desc(totalavg))
mpg2
mpg2<-mpg
mpg
mpg2<-mpg2 %>% mutate(total = cty+hwy) %>% head
mpg2<-mpg2 %>% mutate(totalavg = total/2)
mpg2 %>% arrange(desc(totalavg))
mpg2<-mpg2 %>% mutate(total = cty+hwy) %>% head
mpg2
mpg2
mpg2<-mpg
mpg2
mpg2<-mpg2 %>% mutate(total = cty+hwy)
mpg2<-mpg2 %>% mutate(totalavg = total/2)
mpg2 %>% arrange(desc(totalavg))
mpg2 %>% arrange(desc(totalavg)) %>% head(3)
mpg2<-mpg2 %>% mutate(total = cty+hwy) %>%mpg2 %>% mutate(totalavg = total/2)%>% arrange(desc(totalavg)) %>% head(3)
mpg2<-mpg
mpg2<-mpg2 %>% mutate(total = cty+hwy) %>%mpg2 %>% mutate(totalavg = total/2)%>% arrange(desc(totalavg)) %>% head(3)
mpg2<-mpg2 %>% mutate(total = cty+hwy)  %>% mutate(totalavg = total/2)%>% arrange(desc(totalavg)) %>% head(3)
,pg
mpg2
mpg
mpg.grb<-group_by(mpg,year)
mpg.grb
summarise(mpg.grb,sum(cyl))
summarise(mpg.grb,sum(cyl),sum(hwy))
mpg.grb<-group_by(mpg,year,manufacturer)
u
summarise(mpg.grb,sum(cyl),sum(hwy))
exam %>% group_by(class) %>% summarise(mean_math=mean(math))
exam %>%
group_by(class) %>%
summarise(
mean_math=mean(math),
sum_english=sum(english),
mean_science=mean(science)
)
mpg %>%
group_by(manufacturer,drv) %>%
summarise(
mcty=mean(cty)
)
mpg %>%
group_by(manufacturer,drv) %>%
summarise(
mcty=mean(cty)
) %>%
arrange(desc(mcty))
mpg %>%
group_by(class)
mpg %>%
group_by(class) %>%
summarise(
avg_city=mean(cty),
avg_highway=mean(hwy)
)
mpg %>%
group_by(class) %>%
summarise(
avg_city=mean(cty),
avg_highway=mean(hwy)
) %>%
arrange(desc(avg_city))
mpg %>%
group_by(class) %>%
summarise(
avg_highway=mean(hwy)
) %>%
arrange(desc(avg_highway)) %>%
head(3)
mpg %>%
group_by(manufacturer) %>%
summarise(
avg_highway=mean(hwy)
) %>%
arrange(desc(avg_highway)) %>%
head(3)
mpg %>%
group_by(class) %>%
summarise(
sum_compact=sum(class %in% 'compact')
)
mpg %>%
group_by(class %in% 'compact') %>%
summarise(
sum_compact=sum(manufacturer)
)
mpg %>%
group_by(manufacturer) %>%
summarise(
sum_compact=sum(class %in% 'compact')
)
mpg %>%
group_by(manufacturer) %>%
summarise(
sum_compact=sum(class %in% 'compact')
) %>%
arrange(desc(sum_compact))
